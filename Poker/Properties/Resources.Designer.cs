//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Poker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Poker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All in .
        /// </summary>
        internal static string AllInStr {
            get {
                return ResourceManager.GetString("AllInStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call.
        /// </summary>
        internal static string CallStr {
            get {
                return ResourceManager.GetString("CallStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check.
        /// </summary>
        internal static string CheckStr {
            get {
                return ResourceManager.GetString("CheckStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chips : .
        /// </summary>
        internal static string Chips {
            get {
                return ResourceManager.GetString("Chips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chips : 0.
        /// </summary>
        internal static string ChipsZero {
            get {
                return ResourceManager.GetString("ChipsZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fold.
        /// </summary>
        internal static string FoldStr {
            get {
                return ResourceManager.GetString("FoldStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot 1 Wins.
        /// </summary>
        internal static string MBox_Bot1W {
            get {
                return ResourceManager.GetString("MBox_Bot1W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot 2 Wins.
        /// </summary>
        internal static string MBox_Bot2Win {
            get {
                return ResourceManager.GetString("MBox_Bot2Win", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot 3 Wins.
        /// </summary>
        internal static string MBox_Bot3W {
            get {
                return ResourceManager.GetString("MBox_Bot3W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot 4 Wins.
        /// </summary>
        internal static string MBox_Bot4W {
            get {
                return ResourceManager.GetString("MBox_Bot4W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot 5 Wins.
        /// </summary>
        internal static string MBox_Bot5W {
            get {
                return ResourceManager.GetString("MBox_Bot5W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum of the Big Blind is 200 000.
        /// </summary>
        internal static string MBox_MaxBlind {
            get {
                return ResourceManager.GetString("MBox_MaxBlind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum of the Small Blind is 100 000 $.
        /// </summary>
        internal static string MBox_MaxCashBlind {
            get {
                return ResourceManager.GetString("MBox_MaxCashBlind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum of the Big Blind is 500 $.
        /// </summary>
        internal static string MBox_MinBlind {
            get {
                return ResourceManager.GetString("MBox_MinBlind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum of the Small Blind is 250 $.
        /// </summary>
        internal static string MBox_MinCashBlind {
            get {
                return ResourceManager.GetString("MBox_MinCashBlind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a number only field.
        /// </summary>
        internal static string MBox_NumberField {
            get {
                return ResourceManager.GetString("MBox_NumberField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player Wins.
        /// </summary>
        internal static string MBox_PlayerW {
            get {
                return ResourceManager.GetString("MBox_PlayerW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must raise atleast twice as the current raise !.
        /// </summary>
        internal static string MBox_RaiseTwice {
            get {
                return ResourceManager.GetString("MBox_RaiseTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Big Blind can be only round number !.
        /// </summary>
        internal static string MBox_RoundedNumber {
            get {
                return ResourceManager.GetString("MBox_RoundedNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The changes have been saved ! They will become available the next hand you play. .
        /// </summary>
        internal static string MBox_SavedChanges {
            get {
                return ResourceManager.GetString("MBox_SavedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Small Blind can be only round number !.
        /// </summary>
        internal static string MBox_SBlindRoundNumber {
            get {
                return ResourceManager.GetString("MBox_SBlindRoundNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap poker_table___Copy {
            get {
                object obj = ResourceManager.GetObject("poker-table - Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raise .
        /// </summary>
        internal static string RaiseStr {
            get {
                return ResourceManager.GetString("RaiseStr", resourceCulture);
            }
        }
    }
}
